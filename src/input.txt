Use case Start Main scenario
00: User <select> application
01: System <show> main menu
02: User <invoke> Show client list, Find client
-> rejoin 01

Use case Find client Main scenario
{role ? -cashier; client type}
00: Cashier <select> find client
01: System <read> default client search
02: System <show> client search form
03: Cashier <enter> client search
04: Cashier <select> search
05: System <close> client search form
06: System <check> client search
[client search ? valid]
07: System <read> client
08: System <show> client window
09: Cashier <select> close
10: System <execute> finite element method algoritm
11: System <close> client window
-> end ! OK

Scenario
06: -"-
[client search ? invalid]
A1: System <show> error message
A2: Cachier <select> close
-> end ! notOK

Scenario
A1: -"-
B1: Cashier <select> repeat
-> rejoin 07

Use case Add client Main scenario
00: Cashier <select> add client
-> end ! OK

Use case Show client list Main scenario
{role ? cashier; rolebis}
00: Cashier <select> show client list
01: System <read> client list
02: System <show> client list form
03: Cashier <select> close
-> end ! OK

Scenario
02: -"-
A1: Cachier <invoke> Find client, Add client
A2: System <check> rolebis
[ended ? OK; rolebis ? client]
A3: System <read> client
-> rejoin 01

Scenario
A2: -"-
[ended ? notOK]
B1: System <read> client list
-> rejoin 01

Trigger *link* find client {Find Client}

Data default client search {
	name : text,
	age : integer
}

View *form* client search form {Search for client}, client window {Client data}

Data client search {
	name : text,
	age : integer
}

Trigger *link* search, close

Data Address {
	street: text,
	number: integer
}

Data client {
	name : text,
	age : integer,
	address : Address
}

Data client list {
	clients: [client]
}

View *form* client list form {List of clients}